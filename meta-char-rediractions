* (star)      - Any number of any character (wildcard)
? (hook)      - Any one character (wildcard)
[characters]  - Any matching characters between brackets (wildcard)
`cmd` or $cmd - Command substitution—uses backticks (`), not single quotation marks (' ')
;             - Chain commands together
~             - Represents the home directory of the user
-             - Represents the previous working directory

>             - Sends the output of a command to a file
<             - Receives the input for a command from a file
|             - Runs a command and redirects its output as input to another command
>>            - Appends the output of a command to the existing contents of a file
2>            - Redirects errors that are generated by a command to a file
2>>           - Appends errors that are generated by a command to the existing contents of a file


Bash metacharacters: [characters] bracket example 
• Brackets ([ ]): Matches any character between thebrackets 
• Characters can be numbers, letters, or special characters
• Works with 
• A list of characters: [aef9] matches only a, e, f, and 9 
• A character set: [a–g] matches letters from a to g

The noclobber variable 
• By default, output redirect overwrites an existing file with no warning.
• The noclobber variable can be set to prevent this behavior. It is not set on most Linux distributions by default.
• Examples: – set -o noclobber – echo "test1" > textfile.txt – echo "test2" > textfile.txt

ps -au | grep ec2-user | awk '{print $1 $2}'

• The output of the first command becomes the input of the second command:
• ps –au lists processes.
• The result of ps is sent to grep ec2-user, which looks for the word ec2-user.
• The result of grep is sent to the awk command, which prints the first two columns of the previous result, the process id, and the user name
(awk is a scripting language and is an advanced Linux topic).


Chaining commands is similar to writing small scripts. Another example is the following:
• yum update ; yum install httpd ; systemctl start httpd &
This command updates packages on the system, installs an Apache HTTP server, and starts it.
You can use & to run tasks in the background so that you can keep working on the shell.
Chaining and running tasks in the background can save you a lot of time.


